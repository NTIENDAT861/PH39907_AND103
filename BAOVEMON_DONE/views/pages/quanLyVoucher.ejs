<%- include('../layout/head.ejs') %>

   <%- include('../layout/nav.ejs') %>
      <nav class="flex mt-17" aria-label="Breadcrumb">
         <ol class="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse">
            <li class="inline-flex items-center">
               <a href="#"
                  class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-400 dark:hover:text-white">
                  <svg class="w-3 h-3 me-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                     viewBox="0 0 20 20">
                     <path
                        d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z" />
                  </svg>
                  Trang Chủ
               </a>
            </li>
            <li>
               <div class="flex items-center">
                  <svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true"
                     xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                     <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="m1 9 4-4-4-4" />
                  </svg>
                  <a href="#"
                     class="ms-1 text-sm font-medium text-gray-700 hover:text-blue-600 md:ms-2 dark:text-gray-400 dark:hover:text-white">
                     <%= title %>
                  </a>
               </div>
            </li>

         </ol>
      </nav>
      <!-- NỘI DUNG -->
      <button type="button" data-modal-target="data-modal" onclick="AddVoucher('add')" data-modal-toggle="data-modal"
         class="text-white bg-[#3b5998] hover:bg-[#3b5998]/90 focus:ring-4 focus:outline-none focus:ring-[#3b5998]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-[#3b5998]/55 me-2 mb-2">

         <svg class="w-6 h-6 text-white-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
            width="24" height="24" fill="none" viewBox="0 0 24 24">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
               d="M15 5v14m-8-7h2m0 0h2m-2 0v2m0-2v-2m12 1h-6m6 4h-6M4 19h16c.5523 0 1-.4477 1-1V6c0-.55228-.4477-1-1-1H4c-.55228 0-1 .44772-1 1v12c0 .5523.44772 1 1 1Z" />
         </svg>

         Thêm mã giảm giá
      </button>
      <div class="relative overflow-x-auto shadow-md sm:rounded-lg mt-4">
         <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
            <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
               <tr>
                  <th scope="col" class="p-4">
                     <div class="flex items-center">
                        ID
                     </div>
                  </th>
                  <th scope="col" class="px-6 py-3">
                     Mã code
                  </th>
                  <th scope="col" class="px-6 py-3">
                     Tiền giảm
                  </th>
                  <th scope="col" class="px-6 py-3">
                     Trạng thái
                  </th>

                  <th scope="col" class="px-6 py-3">
                     Thời hạn
                  </th>
                  <th scope="col" class="p-4">
                     Thao tác
                  </th>
               </tr>
            </thead>
            <tbody id="table-body-data">
             

           </tbody>
         </table>
         <div class="flex justify-center">
            <div class="pagination-data-ntd" id="pagination">
             
            </div>
          </div>
      </div>

      <div id="data-modal" tabindex="-1" aria-hidden="true"
         class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
         <div class="relative p-4 w-full max-w-md max-h-full">
            <!-- Modal content -->
            <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
               <!-- Modal header -->
               <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600">
                  <h3 class="text-xl font-semibold text-gray-900 dark:text-white" id="text-modal">
                     Chỉnh sửa
                  </h3>
                  <button type="button" data-modal-hide="data-modal" id="data-modal-close"
                     class="end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white">
                     <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                        viewBox="0 0 14 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                           d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                     </svg>
                     <span class="sr-only">Đóng</span>
                  </button>
               </div>
               <!-- Modal body -->
               <div class="p-4 md:p-5">



                  <div>
                     <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"> Code</label>
                     <input id="code"
                        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white"
                        placeholder="" required />
                  </div>
                  <input type="hidden" id="_id" value="">


                  <div>
                     <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Giá giảm</label>
                     <input id="gia"
                        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white"
                        placeholder="" required />
                  </div>
                  <div>
                     <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Trạng thái</label>
                     <select id="status" name="status"
                        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white">
                        <option value="true">Hoạt động</option>
                        <option value="false">Hết</option>
                     </select>

                  </div>
                  <div id="time-div">
                     <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Thời hạn</label>
                     <input id="time-end" value="2025-01-01T00:00:00.000Z"
                        class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white"
                        placeholder="" required />
                  </div>
                  <div class="btn-savez">
                     <button type="button" id="btn_modal"
                        class="btn-zzzzzz mt-2 px-3 py-2 text-xs font-medium text-center inline-flex items-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">


                        Lưu
                     </button>
                  </div>
               </div>
            </div>
         </div>
      </div>




      <!-- KẾT THÚC -->
      <script>
         let data = <%- JSON.stringify(data) %>; 
           
            const rowsPerPage = 5; 
            let currentPage = 1;
              renderTable(currentPage);
            renderPagination(data.length, rowsPerPage, currentPage);
         function renderTable(page) {
    const tableBody = document.getElementById('table-body-data');
    tableBody.innerHTML = ''; // Xóa dữ liệu cũ trong tbody

    const start = (page - 1) * rowsPerPage;
    const end = page * rowsPerPage;
    const pageData = data.slice(start, end);

    pageData.forEach((item, index) => {
      const tr = document.createElement('tr');
      tr.classList.add('bg-white', 'border-b', 'dark:bg-gray-800', 'dark:border-gray-700', 'hover:bg-gray-50', 'dark:hover:bg-gray-600');
      let status_text= "", itemText= ""; 
      let item_encode = encode_array_item(item);
      if(item.status == true)
      {
         status_text= "Hoạt động"
      }
      else
      {
         status_text = "Hết"
      }
      itemText = calculateDaysRemaining(item.end);

  
     tr.innerHTML = `
    <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
        <td class="w-4 p-4">
            <span class="text-gray-900 dark:text-white">
               ${start + index + 1}
            </span>
        </td>
        <th id="user-name-${item.idUser}" scope="row"
            class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
            <span id="fullname-${item.idUser}">
                ${item.code}
            </span>
        </th>
        <td class="px-6 py-4">
            ${item.discountPrice}
        </td>
        <td class="px-6 py-4">
            ${status_text}
        </td>
        <td class="px-6 py-4">
            ${itemText}
        </td>
        <td class="px-6 py-4 btn-voucher-2">
            <button data-modal-target="data-modal"
                onclick="EditVoucher(${item_encode}, 'edit')" 
                data-modal-toggle="data-modal"
                type="button">
                <img src="/images/edit_738880.png" class="toggleImgOpen">
            </button>
            <button onclick="Delete('${item._id}')"
                type="button">
                <img src="/images/delete_12319558.png" class="toggleImgOpen">
            </button>
        </td>
    </tr>`;
tableBody.appendChild(tr);

      tableBody.appendChild(tr);
    });
  }
 
  function renderPagination(totalRows, rowsPerPage, currentPage) {

    const pagination = document.getElementById('pagination');
    pagination.innerHTML = ''; 

    const totalPages = Math.ceil(totalRows / rowsPerPage);

    // Tạo nút "Previous"
    const prevButton = document.createElement('button');
    prevButton.textContent = 'Previous';
    prevButton.disabled = currentPage === 1;
    prevButton.classList.add('page-btn-act');
    prevButton.addEventListener('click', () => {
      if (currentPage > 1) {
        currentPage--;
        renderTable(currentPage);
        renderPagination(totalRows, rowsPerPage, currentPage);
      }
    });
    pagination.appendChild(prevButton);

    // Tạo các nút trang
    for (let i = 1; i <= totalPages; i++) {
      const button = document.createElement('button');
      button.textContent = i;
      button.classList.add('page-btn');
      if (i === currentPage) {
        button.classList.add('active');
      }
      button.addEventListener('click', () => {
        currentPage = i;
        renderTable(currentPage);
        renderPagination(totalRows, rowsPerPage, currentPage);
      });
      pagination.appendChild(button);
    }

    // Tạo nút "Next"
    const nextButton = document.createElement('button');
    nextButton.textContent = 'Next';
    nextButton.disabled = currentPage === totalPages;
    nextButton.classList.add('page-btn-act');
    nextButton.addEventListener('click', () => {
      if (currentPage < totalPages) {
        currentPage++;
        renderTable(currentPage);
        renderPagination(totalRows, rowsPerPage, currentPage);
      }
    });
    pagination.appendChild(nextButton);
  }

async function Delete(_id) {
    const result = await Swal.fire({
        title: "Thông báo",
        text: "Bạn có chắc muốn xóa?",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Xóa",
        cancelButtonText: "Hủy",
        reverseButtons: true
    });

    if (result.isConfirmed) {
        const response = await fetch("/vouchers/delete", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ _id })
        });

        const data_result = await response.json();

        Swal.fire({
            title: "Thông báo",
            text: data_result.status === 200 ? "Xóa thành công!" : "Xóa không thành công!",
            icon: data_result.status === 200 ? "success" : "error"
        }).then(() => {
            if (data_result.status === 200) {
                setTimeout(() => location.reload(), 1000);
            }
        });
    }
}


      function AddVoucher(act) {
            if (act == "add") {
               const btn_add = document.getElementById('btn_modal');
               document.getElementById('time-div').style.display = "none";
               document.getElementById('text-modal').textContent = "Thêm mã";
               btn_add.addEventListener("click", async () => {

                  var code = document.getElementById('code').value;
                  var discountPrice = document.getElementById('gia').value;
                  var status = document.getElementById('status').value;

                  data = {
                     code,
                     discountPrice,
                     status
                  }
                  if (!code || !discountPrice || !status) {
                     Swal.fire({
                        title: "Thông báo",
                        text: "Điền đủ thông tin !",
                        icon: "error"
                     })
                     return
                  }
                  var api = "/vouchers/add";
                  const response = await fetch(api, {
                     method: "POST",
                     headers: {
                        "Content-Type": "application/json"
                     },
                     body: JSON.stringify(data)
                  });
                  const data_result = await response.json();
                  if (data_result.status == 200) {
                     Swal.fire({
                        title: "Thông báo",
                        text: "Thêm mã giảm giá thành công !",
                        icon: "success"
                     }).then(() => {
                        setTimeout(() => {
                           location.reload();
                        }, 1000);
                     });
                  }
                  else {
                     Swal.fire({
                        title: "Thông báo",
                        text: "Thêm không thành công !",
                        icon: "error"
                     })
                  }

               });


            }
         }
         function EditVoucher(i, act) {
            const dataModal = new Modal(document.getElementById('data-modal'));
            const close = document.getElementById('data-modal-close');
            dataModal.show();


            close.addEventListener("click", ()=> {
               dataModal.hide();
            })

            const btn_modal = document.getElementById('btn_modal');
            if (act === 'edit') {
               btn_modal.onclick = function () {
                  EditVoucherData();
               };
            }

            var _id = document.getElementById('_id');
            var code = document.getElementById('code');
            var gia = document.getElementById('gia');
            var status = document.getElementById('status');
            var time_end = document.getElementById('time-end');


            _id.value = i._id;
            code.value = i.code;
            gia.value = i.discountPrice;
            time_end.value = i.end;

            if (i.status === true) {
               status.value = "true";
            } else {
               status.value = "false";
            }


         }

         async function EditVoucherData() {

            var _id = document.getElementById('_id').value;
            var code = document.getElementById('code').value;
            var discountPrice = document.getElementById('gia').value;
            var status = document.getElementById('status').value;
            var end = document.getElementById('time-end').value;


            const data = {
               _id,
               code,
               discountPrice,
               status,
               end,
               __v: 0
            }
            var api = "/vouchers/update";
            const response = await fetch(api, {
               method: "PUT",
               headers: {
                  "Content-Type": "application/json"
               },
               body: JSON.stringify(data)
            });
            const data_result = await response.json();
            if (data_result.status == 200) {
               Swal.fire({
                  title: "Thông báo",
                  text: "Chỉnh sửa mã giảm giá thành công !",
                  icon: "success"
               }).then(() => {
                  setTimeout(() => {
                     location.reload();
                  }, 1000);
               });
            }
            else {
               Swal.fire({
                  title: "Thông báo",
                  text: "Chỉnh sửa không thành công !",
                  icon: "error"
               })
            }

         }
      </script>
      <%- include('../layout/footer.ejs') %>